@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
        <div class="card shadow">
            <div class="card-body p-4">
                <div class="text-center mb-4">
                    <h2 class="fw-bold text-primary">
                        <i class="fas fa-sign-in-alt me-2"></i>Welcome Back
                    </h2>
                    <p class="text-muted">Sign in to your TechBlog account</p>
                </div>

                <form id="loginForm" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>
                    
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                        <label asp-for="Input.Email" class="form-label">Email</label>
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                        <label asp-for="Input.Password" class="form-label">Password</label>
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        <label asp-for="Input.RememberMe" class="form-check-label">
                            Remember me
                        </label>
                    </div>
                    
                    <!-- reCAPTCHA v2 -->
                    @if (ViewData["RecaptchaSiteKey"] != null && !string.IsNullOrEmpty(ViewData["RecaptchaSiteKey"]?.ToString()))
                    {
                        <div class="form-group mt-3 mb-3">
                            <div class="g-recaptcha" data-sitekey="@ViewData["RecaptchaSiteKey"]"></div>
                            <span class="text-danger field-validation-valid" data-valmsg-for="g-recaptcha-response" data-valmsg-replace="true"></span>
                        </div>
                    }

                    <div class="d-grid">
                        <button id="login-submit" type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-sign-in-alt me-2"></i>Log in
                        </button>
                    </div>
                    
                    <div class="text-center">
                        <p class="mb-2">
                            <a id="forgot-password" asp-page="./ForgotPassword" class="text-decoration-none">Forgot your password?</a>
                        </p>
                        <p class="mb-0">
                            Don't have an account? 
                            <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl" class="text-decoration-none fw-bold">Sign up</a>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    @if (ViewData["RecaptchaSiteKey"] != null && !string.IsNullOrEmpty(ViewData["RecaptchaSiteKey"]?.ToString()))
    {
        <script src="https://www.google.com/recaptcha/api.js" async defer></script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const form = document.getElementById('loginForm');
                if (!form) return;

                form.addEventListener('submit', function(e) {
                    // If reCAPTCHA is not enabled, submit the form directly
                    @if (!(ViewData["RecaptchaSiteKey"] != null && !string.IsNullOrEmpty(ViewData["RecaptchaSiteKey"]?.ToString())))
                    {
                        @:return true;
                    }
                    
                    // For reCAPTCHA v2, the widget handles the validation
                    // Just let the form submit if we get here
                    return true;
                });
            });
        </script>
    }
}
