@model TechBlog.Web.Areas.Admin.Models.CommentListViewModel

@{
    ViewData["Title"] = "Manage Comments";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0 text-gray-800">
        <i class="fas fa-comments me-2"></i>Comments
    </h1>
    <div class="btn-group" role="group">
        <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
            <i class="fas fa-filter me-2"></i>Bulk Actions
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="#" onclick="bulkAction('approve')">
                <i class="fas fa-check me-2"></i>Approve Selected
            </a></li>
            <li><a class="dropdown-item" href="#" onclick="bulkAction('unapprove')">
                <i class="fas fa-times me-2"></i>Unapprove Selected
            </a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item text-danger" href="#" onclick="bulkAction('delete')">
                <i class="fas fa-trash me-2"></i>Delete Selected
            </a></li>
        </ul>
    </div>
</div>

<!-- Filter Tabs -->
<ul class="nav nav-tabs mb-4" id="commentTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button" role="tab">
            All (@Model.TotalCount)
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">
            Pending (@Model.PendingCount)
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="approved-tab" data-bs-toggle="tab" data-bs-target="#approved" type="button" role="tab">
            Approved (@Model.ApprovedCount)
        </button>
    </li>
</ul>

<!-- Search and Filter -->
<div class="card shadow mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <input type="text" name="search" value="@ViewBag.CurrentSearch" class="form-control" placeholder="Search comments...">
            </div>
            <div class="col-md-3">
                <select name="status" class="form-select">
                    <option value="">All Status</option>
                    <option value="pending" selected="@(ViewBag.CurrentStatus == "pending")">Pending</option>
                    <option value="approved" selected="@(ViewBag.CurrentStatus == "approved")">Approved</option>
                    <option value="rejected" selected="@(ViewBag.CurrentStatus == "rejected")">Rejected</option>
                </select>
            </div>
            <div class="col-md-3">
                <select name="sortBy" class="form-select">
                    <option value="newest" selected="@(ViewBag.SortBy == "newest")">Newest First</option>
                    <option value="oldest" selected="@(ViewBag.SortBy == "oldest")">Oldest First</option>
                    <option value="post" selected="@(ViewBag.SortBy == "post")">By Post</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-outline-primary w-100">
                    <i class="fas fa-search me-2"></i>Filter
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Comments List -->
<div class="card shadow">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">Comments (@Model.TotalCount)</h6>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="selectAll">
            <label class="form-check-label" for="selectAll">
                Select All
            </label>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Comments.Any())
        {
            @foreach (var comment in Model.Comments)
            {
                <div class="comment-item border-bottom py-3 @(comment.IsApproved == false && !comment.IsRejected ? "bg-light" : "")">
                    <div class="d-flex">
                        <div class="form-check me-3 mt-1">
                            <input class="form-check-input comment-checkbox" type="checkbox" value="@comment.Id">
                        </div>
                        
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div>
                                    <strong>@comment.AuthorName</strong>
                                    <small class="text-muted">@comment.AuthorEmail</small>
                                    <span class="mx-2">â€¢</span>
                                    <small class="text-muted">@comment.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
                                </div>
                                <div>
                                    @if (comment.IsApproved == true)
                                    {
                                        <span class="badge bg-success">Approved</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Pending</span>
                                    }
                                </div>
                            </div>
                            
                            <div class="mb-2">
                                <small class="text-muted">
                                    On: <a asp-controller="BlogPosts" asp-action="Details" asp-route-id="@comment.BlogPostId" class="text-decoration-none">@comment.BlogPostTitle</a>
                                </small>
                            </div>
                            
                            <div class="comment-content mb-3">
                                @comment.Content
                            </div>
                            
                            <div class="comment-actions">
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Details" asp-route-id="@comment.Id" class="btn btn-outline-info">
                                        <i class="fas fa-eye me-1"></i>View
                                    </a>
                                    
                                    @if (comment.IsApproved != true)
                                    {
                                        <form asp-action="Approve" asp-route-id="@comment.Id" method="post" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-success">
                                                <i class="fas fa-check me-1"></i>Approve
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-action="Unapprove" asp-route-id="@comment.Id" method="post" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-warning">
                                                <i class="fas fa-times me-1"></i>Unapprove
                                            </button>
                                        </form>
                                    }
                                    
                                    <button type="button" class="btn btn-outline-danger" onclick="confirmDelete(@comment.Id, '@comment.AuthorName')">
                                        <i class="fas fa-trash me-1"></i>Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Comments pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-route-page="@(Model.CurrentPage - 1)" asp-route-search="@ViewBag.CurrentSearch">Previous</a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-route-page="@i" asp-route-search="@ViewBag.CurrentSearch">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-route-page="@(Model.CurrentPage + 1)" asp-route-search="@ViewBag.CurrentSearch">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No comments found</h5>
                <p class="text-muted">Comments will appear here when users interact with your blog posts.</p>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the comment by "<span id="deleteCommentAuthor"></span>"?</p>
                <p class="text-danger"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Select all functionality
        document.getElementById('selectAll').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.comment-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });

        function confirmDelete(commentId, authorName) {
            document.getElementById('deleteCommentAuthor').textContent = authorName;
            document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + commentId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        function bulkAction(action) {
            const selectedComments = Array.from(document.querySelectorAll('.comment-checkbox:checked')).map(cb => cb.value);
            
            if (selectedComments.length === 0) {
                alert('Please select at least one comment.');
                return;
            }

            if (confirm(`Are you sure you want to ${action} ${selectedComments.length} comment(s)?`)) {
                // Create form and submit
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `@Url.Action("BulkAction")`;
                
                // Add anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token;
                form.appendChild(tokenInput);
                
                // Add action
                const actionInput = document.createElement('input');
                actionInput.type = 'hidden';
                actionInput.name = 'action';
                actionInput.value = action;
                form.appendChild(actionInput);
                
                // Add selected comment IDs
                selectedComments.forEach(id => {
                    const idInput = document.createElement('input');
                    idInput.type = 'hidden';
                    idInput.name = 'commentIds';
                    idInput.value = id;
                    form.appendChild(idInput);
                });
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
